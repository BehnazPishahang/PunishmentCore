@using Anu.PunishmentOrg.Client.Infrastructure.Contracts.Notice
@using Anu.PunishmentOrg.Client.Infrastructure.Notice
@using Anu.PunishmentOrg.ServiceModel.Notice
@inject AppConfiguration _appConfiguration;

@inject INoticeService _noticeService;

<MudDialog Style="max-height:800px; overflow-y:scroll">
    <DialogContent>
        <MudContainer Style="max-height: 800px; overflow-y: scroll">
            <embed src="@showedPdfContent" visible="false" width="1100" height="730" type="application/pdf" />
        </MudContainer>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Close" Color="Color.Error">بازگشت</MudButton>
        @*<MudButton OnClick="Submit" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Print" Color="Color.Success">چاب</MudButton>*@
    </DialogActions>
</MudDialog>



@code {
    [Parameter]
    public string showedPdfContent { set; get; } = "";

    [Parameter]
    public string No { set; get; } = "";

    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    void Submit() => MudDialog.Close(DialogResult.Ok(true));
    void Cancel()
    { 
       _navigationManager.NavigateTo("/");
        _navigationManager.NavigateTo("/FrmNotice");
    }


    protected override async Task OnInitializedAsync()
    {
        string nnn = No;
        var  NoticeInfo = _noticeService.ChangePNoticeViewByUserStatus(_appConfiguration.BackendServerAddress, _appConfiguration.ChangePNoticeViewByUserStatus, No ,SharedInfo.AccessToken);
        }
}
