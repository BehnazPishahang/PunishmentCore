@page "/SearchNotice"
@using System.Text.Json
@using System.Text.Json.Serialization;
@using Anu.PunishmentOrg.Client.Infrastructure.Notice
@inject IHttpClientFactory ClientFactory


<MudContainer Class="mt-16" MaxWidth="MaxWidth.Medium">
    <MudText Typo="Typo.h3" Align="Align.Center" GutterBottom="true"></MudText>
    <MudGrid Spacing="4" Class="mt-16">
        <MudItem xs="7">
            <MudText Typo="Typo.h5" GutterBottom="true">جستجوی ابلاغ </MudText>
            <MudGrid>
                <MudItem xs="12">
                  
                    <MudTextField Typo="Typo.h3" @bind-Value="CaseNo" Label=" شماه پرونده " HelperText="شماره ۱۶ رقمی پرونده " Variant="Variant.Outlined" />

                </MudItem>
                <MudItem xs="12">
                   <MudTextField Typo="Typo.h3"  @bind-Value="Password" Label="رمز شخصی" HelperText="    " Variant="Variant.Outlined" />
                </MudItem>
             
                <MudItem xs="12" Class="d-flex justify-center">
                    <MudButton Variant="Variant.Filled" DisableElevation="true" Color="Color.Primary" Size="Size.Large" Class="mt-8" @onclick="HandleSearch">مشاهده</MudButton>
                </MudItem>
            </MudGrid>
        </MudItem>
        
     
    </MudGrid>
</MudContainer>



@code {


    public string Password { get; set; }
    public string CaseNo { get; set; }

    [Parameter]
    public EventCallback<SearchNoticeDto> OnNoticeSearch { get; set; }
    private void HandleSearch()
    {

        var Dto = new SearchNoticeDto(CaseNo, Password);
        OnNoticeSearch.InvokeAsync(Dto);
    }

     

}